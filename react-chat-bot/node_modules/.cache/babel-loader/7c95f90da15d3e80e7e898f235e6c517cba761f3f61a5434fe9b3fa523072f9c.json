{"ast":null,"code":"var _jsxFileName = \"/Users/piyushmishra/Documents/codebase/chat-bot/react-chat-bot/src/components/ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useChatContext } from '../context/ChatContext';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    messages,\n    isLoading\n  } = useChatContext();\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 overflow-y-auto p-4 bg-gray-50\",\n    children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-full text-gray-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-16 w-16 mb-4\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 1.5,\n          d: \"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg\",\n        children: \"Start a conversation with the AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Type a message below to begin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message,\n        isLoading: isLoading && index === messages.length - 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"s2JNqmoRgbI+SVu6BNb6JsXOq9s=\", false, function () {\n  return [useChatContext];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useRef","useEffect","useChatContext","ChatMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","messages","isLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","length","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","ref","_c","$RefreshReg$"],"sources":["/Users/piyushmishra/Documents/codebase/chat-bot/react-chat-bot/src/components/ChatWindow.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useChatContext } from '../context/ChatContext';\nimport ChatMessage from './ChatMessage';\n\nconst ChatWindow: React.FC = () => {\n  const { messages, isLoading } = useChatContext();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\n      {messages.length === 0 ? (\n        <div className=\"flex flex-col items-center justify-center h-full text-gray-400\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-16 w-16 mb-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1.5}\n              d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"\n            />\n          </svg>\n          <p className=\"text-lg\">Start a conversation with the AI</p>\n          <p className=\"text-sm mt-2\">Type a message below to begin</p>\n        </div>\n      ) : (\n        <>\n          {messages.map((message, index) => (\n            <ChatMessage\n              key={index}\n              message={message}\n              isLoading={isLoading && index === messages.length - 1}\n            />\n          ))}\n          <div ref={messagesEndRef} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatWindow; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGT,cAAc,CAAC,CAAC;EAChD,MAAMU,cAAc,GAAGZ,MAAM,CAAiB,IAAI,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IAAA,IAAAY,qBAAA;IACd,CAAAA,qBAAA,GAAAD,cAAc,CAACE,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKY,SAAS,EAAC,uCAAuC;IAAAC,QAAA,EACnDR,QAAQ,CAACS,MAAM,KAAK,CAAC,gBACpBd,OAAA;MAAKY,SAAS,EAAC,gEAAgE;MAAAC,QAAA,gBAC7Eb,OAAA;QACEe,KAAK,EAAC,4BAA4B;QAClCH,SAAS,EAAC,gBAAgB;QAC1BI,IAAI,EAAC,MAAM;QACXC,OAAO,EAAC,WAAW;QACnBC,MAAM,EAAC,cAAc;QAAAL,QAAA,eAErBb,OAAA;UACEmB,aAAa,EAAC,OAAO;UACrBC,cAAc,EAAC,OAAO;UACtBC,WAAW,EAAE,GAAI;UACjBC,CAAC,EAAC;QAA2G;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9G;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1B,OAAA;QAAGY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAgC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3D1B,OAAA;QAAGY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA6B;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,gBAEN1B,OAAA,CAAAE,SAAA;MAAAW,QAAA,GACGR,QAAQ,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B7B,OAAA,CAACF,WAAW;QAEV8B,OAAO,EAAEA,OAAQ;QACjBtB,SAAS,EAAEA,SAAS,IAAIuB,KAAK,KAAKxB,QAAQ,CAACS,MAAM,GAAG;MAAE,GAFjDe,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF,CAAC,eACF1B,OAAA;QAAK8B,GAAG,EAAEvB;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC5B;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA5CID,UAAoB;EAAA,QACQN,cAAc;AAAA;AAAAkC,EAAA,GAD1C5B,UAAoB;AA8C1B,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}